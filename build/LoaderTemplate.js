class Loader{constructor(){this.widgetID="{{USER_HASH}}"}async initializeLoader(){const newHTMLDoc=`\n        <!DOCTYPE html>\n            <head>\n                <script src="https://kit.fontawesome.com/76351f6769.js" crossorigin="anonymous"><\/script>\n                <link rel="preconnect" href="https://fonts.googleapis.com">\n                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n                <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans:wght@300;400;600&display=swap">\n            </head>\n            <body>\n                <script type="module" src="https://chat-buddy-widget.vercel.app/chatBudy.js" async><\/script>\n            </body>\n        </html>\n        `;this.Iframe=document.createElement("iframe");this.Iframe.style.display="none";this.Iframe.title="ChatBudy chat widget code";this.Iframe.onload=()=>{const IframeDocument=this.Iframe.contentDocument;IframeDocument.open();IframeDocument.write(newHTMLDoc);IframeDocument.close()};document.body.appendChild(this.Iframe);this.LoadUpsequence(this.widgetID)}LoadUpsequence=async widget_id=>{try{if(sessionStorage.getItem("widgetLoaded")||sessionStorage.getItem("convoClosed")){return}const response=await fetch(`http://localhost:8080/visitor/visitor-info`,{method:"get",headers:{"Content-Type":"application/json"}});const data=await response.json();const new_visitor=await setNewVisitor(data,widget_id);const new_chat=await initiateChat(widget_id);if(new_chat&&new_visitor){sessionStorage.setItem("widgetLoaded",true)}}catch(err){console.log("Load up sequence ERROR: ",err)}};setNewVisitor=async(visitor_data,widget_id)=>{try{const newVisitor={isoCode:visitor_data.info.country.iso_code,browser:navigator.userAgent};const visitor=await fetch(`http://localhost:8080/visitor/new-visitor-${widget_id}`,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(newVisitor)});const data=await visitor.json();setCookie("visitor_jwt",data.visitorToken.jwtToken);return true}catch(err){console.log(err);return false}};initiateChat=async widget_id=>{try{const chat={u_hash:widget_id};const token=getCookie("visitor_jwt");if(token){const start_chat=await fetch("http://localhost:8080/chat/new-room",{method:"post",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify(chat)});if(!start_chat){console.log("No chatrooms found...reset everything")}return true}}catch(err){console.log(err);return false}}}export const initializeWidgetLoader=()=>{const LoaderInstance=new Loader;return LoaderInstance};initializeWidgetLoader();